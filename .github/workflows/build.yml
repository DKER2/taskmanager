# This workflow name will appear in the "Actions" tab of your GitHub repository.
name: Build and Publish Docker Image

# This section defines when the workflow will run.
# It now triggers on any 'push' of a tag starting with 'v'.
on:
  push:
    tags:
      - 'v*'

jobs:
  # Defines a single job named 'build-and-push-to-ghcr'.
  build-and-push-to-ghcr:
    # The job will run on a GitHub-hosted runner using the latest Ubuntu version.
    runs-on: ubuntu-latest

    # This grants the job permissions to read repository content and write packages.
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Check out the repository's code so the workflow can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to the GitHub Container Registry (GHCR).
      # This allows us to push the built Docker image to the registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # 'github.actor' is the username of the person who triggered the workflow.
          # The GITHUB_TOKEN is automatically created by Actions to authenticate.
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Extract metadata (tags, labels) for Docker.
      # This action automatically generates tags based on the git branch, SHA, etc.
      # When triggered by a tag, it will automatically use that tag.
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}

      # Step 4: Build the Docker image and push it to the registry.
      # It uses the tags generated by the metadata-action in the previous step.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          no-cache: true
          # This will now use the Git tag (e.g., v1.0.0) as the Docker tag.
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
