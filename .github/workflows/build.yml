# This workflow name will appear in the "Actions" tab of your GitHub repository.
name: Build and Publish Docker Image

# This section defines when the workflow will run.
# Here, it triggers on every 'push' to the 'main' branch.
on:
  push:
    branches: [ "main" ]

jobs:
  # Defines a single job named 'build-and-push-to-ghcr'.
  build-and-push-to-ghcr:
    # The job will run on a GitHub-hosted runner using the latest Ubuntu version.
    runs-on: ubuntu-latest

    # This grants the job permissions to read repository content and write packages.
    permissions:
      contents: read
      packages: write

    steps:
      # Step 1: Check out the repository's code so the workflow can access it.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Log in to the GitHub Container Registry (GHCR).
      # This allows us to push the built Docker image to the registry.
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # 'github.actor' is the username of the person who triggered the workflow.
          # The GITHUB_TOKEN is automatically created by Actions to authenticate.
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Build the Docker image and push it to the registry.
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # The context is the current directory (where the Dockerfile is).
          context: .
          # This tells the action to push the image after a successful build.
          push: true
          # We tag the image in a standard format: ghcr.io/OWNER/REPO:latest
          # This makes it easy to find and use the image.
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest
